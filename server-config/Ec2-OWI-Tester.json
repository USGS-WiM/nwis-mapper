{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "USGS Mapping and Parameters Mapping",
    "Parameters":
    {
        "Environment":
        {
            "Description": "AWS VPC Environment Name",
            "Type": "String",
            "Default": "DEV",
            "AllowedValues": ["DEV", "PROD"]
        },
        "OperatingSystem":
        {
            "Description": "Operating System Desired",
            "Type": "String",
            "Default": "UbuntuDebian",
            "AllowedValues": ["AmazonLinuxRedHat", "RedHatEnterpriseLinuxRedHat", "UbuntuDebian"]
        },
          "Subnet":
        {
            "Description": "Desired Subnet to Launch Instance",
            "Type" : "AWS::EC2::Subnet::Id"
        }
    },
    "Mappings":
    {
        "Environment":
        {
            "DEV":
            {
                "securitygroups"  : ["sg-f228cd95","sg-d928cdbe"],
                "InstanceRole"    : "Ec2-Role",
                "ADUser"          : "igsowi-systemjoiner",
                "ADPass"          : "YCagLtVJY4G9sjQJfNqC",
                "ADCustomerOU"    : "OWI",
                "SudoGroup"       : "IGSGOWIServerAdmins",
                "CWLogsConfigS3Path"      : "dev-owi-admin/cloudwatch_logs_generic.cfg",
                "owis3bucket"      : "nwis-mapper"
            },
            "PROD":
            {
                "securitygroups"  : [""],
                "InstanceRole"    : "Ec2-Role",
                "ADUser"          : "igsowi-systemjoiner",
                "ADPass"          : "YCagLtVJY4G9sjQJfNqC",
                "ADCustomerOU"    : "OWI",
                "SudoGroup"       : "IGSGOWIServerAdmins",
                "CWLogsConfigS3Path"      : "prod-owi-admin/cloudwatch_logs_generic.cfg",
                "owis3bucket"      : "TBD"
            },
            "Tags":
            {
                "Name"                        : "NWIS Mapper"
            }
        },
        "OS":
        {
            "AmazonLinuxRedHat":
            {
                "amiID"           : "ami-f0091d91",
                "InstanceType"    : "t2.micro",
                "installer"          : "yum install -y",
                "packages"          : "wget",
                "IEMDistro"       : "Red_Hat_Enterprise",
                "IEMClientName"   : "BESAgent-9.2.5.130-rhe5.x86_64.rpm",
                "FileInstaller"   : "rpm -i",
                "CentrifyInstaller": "centrify-suite-2015.1-rhel4-x86_64.tgz"
            },
            "RedHatEnterpriseLinuxRedHat":
            {
                "amiID"           : "ami-775e4f16",
                "InstanceType"    : "t2.micro",
                "installer"          : "yum install -y",
                "packages"          : "wget perl",
                "IEMDistro"       : "Red_Hat_Enterprise",
                "IEMClientName"   : "BESAgent-9.2.5.130-rhe5.x86_64.rpm",
                "FileInstaller"   : "rpm -i",
                "CentrifyInstaller": "centrify-suite-2015.1-rhel4-x86_64.tgz"
            },
            "UbuntuDebian":
            {
                "amiID"           : "ami-9abea4fb",
                "InstanceType"    : "t2.micro",
                "installer"          : "apt-get update -y && apt-get install -y",
                "packages"          : "awscli clamav clamav-freshclam heirloom-mailx",
                "IEMDistro"       : "Ubuntu",
                "IEMClientName"   : "BESAgent-9.2.5.130-ubuntu10.amd64.deb",
                "FileInstaller"   : "dpkg -i",
                "CentrifyInstaller": "centrify-suite-2015.1-deb6-x86_64.tgz"
            }

        }
    },
    "Conditions" : {
        "IsAmz" : { "Fn::Equals" : [
                        {"Ref" : "OperatingSystem"},
                        "AmazonLinuxRedHat"
                        ]
                    },
        "IsRHEL" : { "Fn::Equals" : [
                        {"Ref" : "OperatingSystem"},
                        "RedHatEnterpriseLinuxRedHat"
                        ]
                    },
        "IsAmzORRHEL": {"Fn::Or":[
                            {"Condition" : "IsRHEL"}, {"Condition" : "IsAmz"}
                        ]}
        },
    "Resources":
    {
        "MyEC2":
        {
            "Type": "AWS::EC2::Instance",
            "Properties":
            {
                "ImageId": {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"amiID"]},
                "InstanceType": {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"InstanceType"]},
                "IamInstanceProfile" :{"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"InstanceRole"]},
                "Monitoring": "true",
                "SourceDestCheck": "true",
                "NetworkInterfaces":
                [
                    {
                        "GroupSet": {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"securitygroups"]},
                        "AssociatePublicIpAddress": "false",
                        "DeviceIndex": "0",
                        "DeleteOnTermination": "true",
                        "SubnetId": {"Ref": "Subnet"}
                    }
                ],
                "BlockDeviceMappings":
                [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {"VolumeSize" : "8"}
                    }
                ],
                "Tags":
                [
                    {
                        "Key":"Name",
                        "Value":{"Fn::FindInMap":["Environment", "Tags","Name"]}
                    }
                ],
                "UserData":
                {
                    "Fn::Base64":
                    {
                        "Fn::Join":
                        [
                            "",
                            [
                                "#!/bin/bash \n",

                                "set -x \n",

                                "inst=\"IGS" , {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"ADCustomerOU"]}, "\"`curl https://169.254.169.254/latest/meta-data/instance-id` \n",
                                "ip=`curl https://169.254.169.254/latest/meta-data/local-ipv4` \n",

                                "strHostName=${inst:0:14}\".usgs.chs.ead\" \n",
                                "#Setting hostname \n",
                                "echo HOSTNAME=$strHostName >> /etc/sysconfig/network \n",
                                "hostname $strHostName \n",

                                {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"installer"]}, " ", {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"packages"]}, " \n",

                                {"Fn::If":
                                    ["IsAmz",
                                        {"Fn::Join":
                                            ["",
                                                [
                                                 "#Centify needs to think this is RH \n",
                                                 "touch /etc/redhat-release \n"
                                                ]
                                            ]
                                        },
                                        {"Ref": "AWS::NoValue"}
                                    ]
                                },

                                "#Do some work \n",
                                "mkdir centrify \n",
                                "cd centrify \n",
                                "wget https://s3-us-west-2.amazonaws.com/bucket-all-customers/InstallFiles/Centrify/DC/" , {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"CentrifyInstaller"]} , " \n",

                                "#untar/zip \n",
                                "tar -zxvf ", {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"CentrifyInstaller"]} , " \n",

                                "#Install \n",
                                "./install.sh --express \n",

                                "#Join AD \n",
                                "adjoin -w usgs.chs.ead -u " , {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"ADUser"]} , " -p " , {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"ADPass"]}, " -c \"usgs.chs.ead/CHS Programs/" , {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"ADCustomerOU"]} , "/Servers/" , {"Ref": "Environment"}, "\" --name $strHostName -f \n",

                                "#Update DNS using a service account and overwrite any ghost entries \n",
                                "addns --update -u " , {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"ADUser"]} , " -p " , {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"ADPass"]}, " --name $strHostName --domain usgs.chs.ead --server igsawsoidc01.usgs.chs.ead@USGS.CHS.EAD \n",

                                "#Delete any existing DNS entries -- these may error out, but that's ok \n",
                                "addns --delete -u " , {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"ADUser"]} , " -p " , {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"ADPass"]}, " --server igsawsoidc01.usgs.chs.ead@USGS.CHS.EAD \n",

                                "#Update DNS again under the machine account \n",
                                "addns --update --machine --name $strHostName --domain usgs.chs.ead --server igsawsoidc01.usgs.chs.ead@USGS.CHS.EAD \n",


                                "#Configured sudoers \n",
                                "echo \"\" >> /etc/sudoers \n",
                                "echo \"#Delegated Administrators\" >> /etc/sudoers \n",
                                "echo \"%" , {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"SudoGroup"]}, "\" \"ALL=(ALL)\" \"NOPASSWD:\" \"ALL\" >> /etc/sudoers \n",

                                "#install awslogs \n",
                                "wget https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py \n",
                                "chmod +x ./awslogs-agent-setup.py \n",
                                {"Fn::If": ["IsAmz", "rm -f /etc/redhat-release \n", {"Ref": "AWS::NoValue"}]},
                                "./awslogs-agent-setup.py -n -r us-west-2 -c s3://" , {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"CWLogsConfigS3Path"]}, " \n",

                                "pip install awscli \n",

                                "#Install IEM Client \n",
                                "mkdir /etc/opt/BESClient \n",
                                        "wget https://s3-us-west-2.amazonaws.com/bucket-all-customers/InstallFiles/IBM/IEM/v9.2.5.130/Client/Non_Windows/" , {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"IEMDistro"]} , "/actionsite.afxm -P /etc/opt/BESClient/ \n",
                                "wget https://s3-us-west-2.amazonaws.com/bucket-all-customers/InstallFiles/IBM/IEM/v9.2.5.130/Client/Non_Windows/" , {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"IEMDistro"]} , "/besclient.config -P /etc/opt/BESClient/ \n",
                                "wget https://s3-us-west-2.amazonaws.com/bucket-all-customers/InstallFiles/IBM/IEM/v9.2.5.130/Client/Non_Windows/" , {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"IEMDistro"]} , "/", {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"IEMClientName"]}, " -P /etc/opt/BESClient/ \n",
                                {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"FileInstaller"]} , " /etc/opt/BESClient/", {"Fn::FindInMap": ["OS",{"Ref": "OperatingSystem"},"IEMClientName"]}, " \n",
                                "touch /var/opt/BESClient/USGS.txt \n",
                                "touch /var/opt/BESClient/USGS_CHS.txt \n",
                                "service besclient restart \n",

                                {"Fn::If":
                                    [
                                        "IsAmzORRHEL",
                                        {"Fn::Join":
                                            ["",
                                                [
                                                 "wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm -P /root/ \n",
                                                 "rpm -Uvh /root/epel-release-latest-7.noarch.rpm \n",
                                                 "yum install -y clamav clamav-update.x86_64 mailx.x86_64 \n",
                                                 "sed -i '/^Example/d' /etc/freshclam.conf \n",
                                                 "line=\"0 0,12 * * * /usr/bin/freshclam --quiet -l /var/log/freshclam.log\" \n",
                                                 "crontab -l | { cat; echo \"$line\"; } | crontab - \n",
                                                 "mkdir /var/log/clamav/ \n"
                                                ]
                                            ]
                                        },
                                        {"Ref": "AWS::NoValue"}
                                    ]
                                },

                                {"Fn::If":
                                    ["IsRHEL",
                                        {"Fn::Join":
                                            ["",
                                                [
                                                 "freshclam \n",
                                                  "#Set selinux to permissive \n",
                                                 "sed -i -e 's/enforcing/permissive/g' /etc/selinux/config \n",
                                                 "setenforce permissive \n"
                                                ]
                                            ]
                                        },
                                        {"Ref": "AWS::NoValue"}
                                    ]
                                },

                                "wget https://s3-us-west-2.amazonaws.com/bucket-all-customers/clamscan_daily.sh -O /root/clamscan_daily.sh \n",
                                "chmod 0755 /root/clamscan_daily.sh \n",
                                "ln /root/clamscan_daily.sh /etc/cron.daily/clamscan_daily \n",

                                "mkdir -p /chsinit \n",
                                "mkdir -p /chsinit/centrify \n",
                                "mkdir -p /var/log/centrify \n",
                                "wget https://s3-us-west-2.amazonaws.com/bucket-all-customers/centrify_adeditlinkec2toad.sh -O /chsinit/centrify/centrify_adeditlinkec2toad.sh \n",
                                "chmod 0755 /chsinit/centrify/centrify_adeditlinkec2toad.sh \n",
                                "ln /chsinit/centrify/centrify_adeditlinkec2toad.sh /etc/cron.daily/centrify_adeditlinkec2toad \n",

                                "mkdir -p /var/log/centrify \n",
                                "wget https://s3-us-west-2.amazonaws.com/bucket-all-customers/centrify_dnsregistration.sh -O /chsinit/centrify/centrify_dnsregistration.sh \n",
                                "chmod 0755 /chsinit/centrify/centrify_dnsregistration.sh \n",
                                "ln /chsinit/centrify/centrify_dnsregistration.sh /etc/cron.daily/centrify_dnsregistration \n",

								"echo '{\"s3bucket\":\"" , {"Fn::FindInMap": ["Environment", {"Ref": "Environment"},"owis3bucket"]} , "\"}' > /tmp/s3bucket.json \n",
                                "wget https://raw.githubusercontent.com/USGS-OWI/nwis-mapper/master/server-config/server-setup.sh \n",
                                "sh server-setup.sh  \n"
                            ]
                        ]
                    }
                }
            }
        }
    },
    "Outputs":
    {
        "MyInstanceId":
        {
            "Description": "Resource ID of the newly created EC2 instance",
            "Value": {"Ref": "MyEC2"}
        }
    }
}
